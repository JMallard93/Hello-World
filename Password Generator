import random
import string

def generate_password(min_length, numbers=True, special_characters=True):
    # Pulling list of characters to choose from
    letters = string.ascii_letters
    digits = string.digits
    special = string.punctuation

    # Makes string for characters that can be selected from
    characters = letters
    if numbers:
        characters += digits
    if special_characters:
        characters += special

    # Starts password as empty, and empty password will not meet criteria
    pwd = ""
    meets_criteria = False
    has_number = False
    has_special = False
    
    # If password isn't done, program will continue to add new character
    while not meets_criteria or len(pwd) < min_length:
        new_char = random.choice(characters)
        pwd += new_char
        
        # Make sure digit/special character is present
        if new_char in digits:
            has_number = True
        elif new_char in special:
            has_number = True

        # Criteria will be True unless proved otherwise by numbers/special characters
        meets_criteria = True
        if numbers:
            meets_criteria = has_number
        if special_characters:
            meets_criteria = meets_criteria and has_special

        # When length is reached, return password
        if len(pwd) == min_length:
            return pwd

# Ask user for password parameters       
min_length = int(input("Enter the minimum length: ")) 

# Make sure users can't request passwords that take too long to process, if > 100 ask again
while min_length > 100:
    print("Password must be less than 100 characters.")
    min_length = int(input("Enter the minimum length: "))

has_number = input("Do you want numbers in the password (y/n)? ").lower() == "y"
has_special = input("Do you want special characters in the password (y/n)? ").lower() == "y"

pwd = generate_password(min_length, has_number, has_special)
print("The generated password is:", pwd)